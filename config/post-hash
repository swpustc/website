#!/bin/bash
## Work Directory: /home/git/html/
## User: git

# function
function timestamp() {
  if [ ! -w $1 ] ; then
    ##Error1
    echo $1: Input file error1
    exit
  elif [ ! -w $2 ] ; then
    ##Error2
    echo $2: Input file error2
    exit
  elif [ -f $3 ] ; then
    time=($(cksum $3))
    time=$(echo "obase=16;$time" | bc)
    realurl=$(echo $3 | sed 's/^static\//\/\/cdn.swpbox.info\//g' )
    url=$(echo $realurl | sed 's/\//\\\//g')
    replace=$(echo $url | sed 's/\./\\./g')
    echo "s/\\(\\\"\\(https\?:\\)\?$replace\\)\\\"/\\1?t=$time\\\"/g" >>$1
    TIMESTAMP=$(echo $3 | sed  's/^static\/\(.*\)/TIMESTAMP:BEGIN:\1:END:TIMESTAMP/g')
    stamp=$(echo $TIMESTAMP | sed 's/\//\\\//g')
    replace=$(echo $stamp | sed 's/\./\\./g')
    echo "s/$replace/$time/g" >>$2
    echo "hash $realurl"
    return 0
  else
    return 2
  fi
}

# Hash
sed_std=config/hash_standard.sed
sed_inl=config/hash_inline.sed
if [ "$1"x = x ] ; then
  ## Error
  echo $0: Too few arguments
  exit
elif [ "$1"x = startupx ] ; then
  ## Create sed Script
  tee $sed_std </dev/null
  tee $sed_inl </dev/null
  for file in $(find -L static/ -type f -follow -print) ; do
    timestamp $sed_std $sed_inl $file
  done
  exit
elif [ "$1"x = STANDARDx ] ; then
  ## sed Script STANDARD
  if [ ! -L $2 ] ; then
    sed -i -f $sed_std $2 >/dev/null
  fi
  exit
elif [ "$1"x = TIMESTAMPx ] ; then
  ## sed Script replace TIMESTAMP
  if [ ! -L $2 ] ; then
    sed -i -f $sed_inl $2 >/dev/null
  fi
  exit
fi
